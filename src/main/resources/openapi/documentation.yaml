openapi: 3.0.0
info:
  title: API Auto e Clienti
  description: API per la gestione delle automobili e dei clienti
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Server locale
tags:
  - name: Auto
    description: Operazioni relative alle automobili
  - name: Cliente
    description: Operazioni relative ai clienti
  - name: Noleggio
    description: Operazioni relative ai noleggi
paths:
  /auto:
    get:
      summary: Ottiene la lista di tutte le auto
      operationId: getAllAuto
      tags:
        - Auto
      responses:
        "200":
          description: Lista di automobili
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AutoDTO"
  /auto/{id}:
    get:
      summary: Ottiene un'auto per ID
      operationId: getAutoById
      tags:
        - Auto
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettagli dell'auto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoDTO"
        "404":
          description: Auto non trovata
  /auto/init:
    get:
      summary: Inizializza un'auto con valori casuali
      operationId: initAuto
      tags:
        - Auto
      responses:
        "200":
          description: Auto inizializzata con successo
  /cliente:
    get:
      summary: Ottiene la lista di tutti i clienti
      operationId: getAllClienti
      tags:
        - Cliente
      responses:
        "200":
          description: Lista di clienti
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClienteDTO"
    post:
      summary: Crea un nuovo cliente
      operationId: createCliente
      tags:
        - Cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteCreateDTO"
      responses:
        "201":
          description: Cliente creato con successo
  /cliente/{id}:
    get:
      summary: Ottiene un cliente per ID
      operationId: getClienteById
      tags:
        - Cliente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettagli del cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteDTO"
        "404":
          description: Cliente non trovato
    delete:
      summary: Elimina un cliente per ID
      operationId: deleteCliente
      tags:
        - Cliente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Cliente eliminato con successo
        "400":
          description: Formato ID non valido
  /cliente/init:
    get:
      summary: Inizializza un cliente con valori predefiniti
      operationId: initCliente
      tags:
        - Cliente
      responses:
        "201":
          description: Cliente inizializzato con successo
  /cliente/search/{term}/*:
    get:
      summary: Cerca clienti per termine
      operationId: searchClienti
      tags:
        - Cliente
      parameters:
        - name: term
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista di clienti filtrati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClienteDTO"
  /cliente/filter/{field}/{value}/**:
    get:
      summary: Filtra clienti per campo e valore con filtri aggiuntivi
      operationId: filterClienti
      tags:
        - Cliente
      parameters:
        - name: field
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista di clienti filtrati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClienteDTO"
  /cliente/patente/{patente}:
    get:
      summary: Trova clienti con un numero di patente specifico
      operationId: getClientiByPatente
      tags:
        - Cliente
      parameters:
        - name: patente
          in: path
          required: true
          schema:
            type: string
            pattern: "[A-Z]{2}\\d{6}"
      responses:
        "200":
          description: Lista di clienti con patente corrispondente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClienteDTO"
  /cliente/advanced-search/{...}:
    get:
      summary: Ricerca avanzata di clienti con criteri multipli
      operationId: advancedSearchClienti
      tags:
        - Cliente
      responses:
        "200":
          description: Lista di clienti filtrati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClienteDTO"
  /noleggio:
    get:
      summary: Ottiene la lista di tutti i noleggi
      operationId: getAllNoleggi
      tags:
        - Noleggio
      security:
        - basicAuth: [ ]
      responses:
        "200":
          description: Lista di noleggi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoleggioDTO"
        "401":
          description: Non autorizzato
    post:
      summary: Crea un nuovo noleggio
      operationId: createNoleggio
      tags:
        - Noleggio
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoleggioCreateDTO"
      responses:
        "201":
          description: Noleggio creato con successo
        "401":
          description: Non autorizzato
  /noleggio/{id}:
    get:
      summary: Ottiene un noleggio per ID
      operationId: getNoleggioById
      tags:
        - Noleggio
      security:
        - basicAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettagli del noleggio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoleggioDTO"
        "404":
          description: Noleggio non trovato
        "401":
          description: Non autorizzato
    delete:
      summary: Elimina un noleggio per ID
      operationId: deleteNoleggio
      tags:
        - Noleggio
      security:
        - basicAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Noleggio eliminato con successo
        "400":
          description: Formato ID non valido
        "401":
          description: Non autorizzato
  /noleggio/init:
    get:
      summary: Inizializza un noleggio con valori predefiniti
      operationId: initNoleggio
      tags:
        - Noleggio
      security:
        - basicAuth: [ ]
      responses:
        "201":
          description: Noleggio inizializzato con successo
        "401":
          description: Non autorizzato
  /noleggio/filter/date/{startDate}/{endDate}:
    get:
      summary: Filtra noleggi per intervallo di date
      operationId: filterNoleggiByDate
      tags:
        - Noleggio
      security:
        - basicAuth: [ ]
      parameters:
        - name: startDate
          in: path
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Lista di noleggi filtrati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoleggioDTO"
        "401":
          description: Non autorizzato
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    AutoDTO:
      type: object
      properties:
        id:
          type: integer
        marca:
          type: string
        modello:
          type: string
        targa:
          type: string
        anno_immatricolazione:
          type: integer
        chilometraggio:
          type: integer
        stato:
          type: string
        costo_giornaliero:
          type: number
          format: double
    AutoCreateDTO:
      type: object
      properties:
        marca:
          type: string
        modello:
          type: string
        targa:
          type: string
        anno_immatricolazione:
          type: integer
        chilometraggio:
          type: integer
        costo_giornaliero:
          type: number
          format: double
    ClienteDTO:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        cognome:
          type: string
        email:
          type: string
        telefono:
          type: string
        indirizzo:
          type: string
        patente_numero:
          type: string
        data_scadenza_patente:
          type: string
          format: date
    ClienteCreateDTO:
      type: object
      properties:
        nome:
          type: string
        cognome:
          type: string
        email:
          type: string
        telefono:
          type: string
        indirizzo:
          type: string
        patente_numero:
          type: string
        data_scadenza_patente:
          type: string
          format: date
    NoleggioDTO:
      type: object
      properties:
        id:
          type: integer
        cliente_id:
          type: integer
        auto_id:
          type: integer
        data_inizio:
          type: string
          format: date
        data_fine:
          type: string
          format: date
        costo_totale:
          type: number
          format: double
        stato:
          type: string
    NoleggioCreateDTO:
      type: object
      properties:
        cliente_id:
          type: integer
        auto_id:
          type: integer
        data_inizio:
          type: string
          format: date
        data_fine:
          type: string
          format: date
        costo_totale:
          type: number
          format: double
        stato:
          type: string
