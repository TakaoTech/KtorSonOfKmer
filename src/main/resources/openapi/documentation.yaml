openapi: 3.0.0
info:
  title: API Auto e Clienti
  description: API per la gestione delle automobili e dei clienti
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Server locale
paths:
  /auto:
    get:
      summary: Ottiene la lista di tutte le auto
      operationId: getAllAuto
      responses:
        "200":
          description: Lista di automobili
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AutoDTO"
  /auto/{id}:
    get:
      summary: Ottiene un'auto per ID
      operationId: getAutoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettagli dell'auto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoDTO"
        "404":
          description: Auto non trovata
  /clienti:
    get:
      summary: Ottiene la lista di tutti i clienti
      operationId: getAllClienti
      responses:
        "200":
          description: Lista di clienti
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClienteDTO"
  /clienti/{id}:
    get:
      summary: Ottiene un cliente per ID
      operationId: getClienteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Dettagli del cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteDTO"
        "404":
          description: Cliente non trovato
  /echo:
    post:
      tags:
        - Echo
      summary: Echo service - returns the received text
      operationId: echoText
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: The echoed text
          content:
            text/plain:
              schema:
                type: string
  /echoJson:
    post:
      tags:
        - Echo
      summary: Echo service for JSON/XML - returns the received JSON/XML
      operationId: echoJson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            example: "            {
              \"SimpleXmlObject\": {
              \"id\": \"2\",
              \"name\": \"Luca Bianchi\"
            }
          }"
          application/xml:
            schema:
              type: object
            example: "<SimpleXmlObject><id>2</id><name>Luca Bianchi</name></SimpleXmlObject>"
      responses:
        "200":
          description: The echoed JSON/XML wrapped in a body object
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: object
              example:
                body:
                  name: "example"
                  value: 123
            application/xml:
              schema:
                type: object
                properties:
                  body:
                    type: object
              example:
                <response>
                <body>
                <name>example</name>
                <value>123</value>
                </body>
                </response>
  /echoForms:
    post:
      tags:
        - Echo
      summary: Echo service for form data - creates an account
      operationId: echoForms
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  default: "samuele794"
      responses:
        "200":
          description: Account creation confirmation message
          content:
            text/plain:
              schema:
                type: string
  /echoUpload:
    post:
      tags:
        - Echo
      summary: Echo service for file upload - returns the uploaded file as a download
      operationId: echoUpload
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: The uploaded file as a download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /echo404:
    get:
      tags:
        - Echo
      summary: Echo service that simulates a 404 Not Found error
      operationId: echo404
      responses:
        "404":
          description: Simulated 404 Not Found error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"
components:
  schemas:
    AutoDTO:
      type: object
      properties:
        id:
          type: integer
        marca:
          type: string
        modello:
          type: string
        targa:
          type: string
        anno_immatricolazione:
          type: integer
        chilometraggio:
          type: integer
        stato:
          type: string
        costo_giornaliero:
          type: number
          format: double
    ClienteDTO:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        cognome:
          type: string
        email:
          type: string
        telefono:
          type: string
        indirizzo:
          type: string
        patente_numero:
          type: string
        data_scadenza_patente:
          type: string
          format: date
